# Note that any of these values can be set as environment variables or Java system properties.
# To use environment variables, replace '.' with '_' and make uppercase, for example: APPSERVER_PORT=8080

# The port that users will use to access the apps
appserver.port=8080

# A directory where all the repos, log files, temp data etc will be stored
appserver.data.dir=target/local

# Specifies an app to download and run if there are no apps already. The default app is a console
# that lets you view and add apps.
appserver.initial.app.url=https://github.com/danielflower/app-runner-home.git

# You can redirect "/" to an app - e.g. one that lists all the available apps, like the one at git@github.com:danielflower/app-runner-home.git
appserver.default.app.name=app-runner-home

# If you want to back up data directory of AppRunner, you can specify a Git repo. The data dir will get pushed to
# the remote remote periodically.
# appserver.backup.url=
# appserver.backup.schedule.minutes=10


# Timeouts in millis for the proxied requests to the apps - if an app exceeds these when responding a 504 is returned
apprunner.proxy.total.timeout=60000
apprunner.proxy.idle.timeout=30000

# Maximum request body size
apprunner.request.max.size.bytes=250000000

# Sets the name to add on the Via header. Defaults to apprunner
apprunner.proxy.via.name=apprunner

# To support https, you need to specify an https port, and you need to have a keystore or use letsencrypt

# To use letsencrypt to get a free cert on startup, make sure your app is available on http port 80 and
# use the following:
#appserver.https.port=8443
#apprunner.acme.serverUri=acme://letsencrypt.org/
#apprunner.acme.domain=yourdomain.example.org
#apprunner.acme.configDir=/some/dir

# If you want to use your own keystore, config it as follows:
#appserver.https.port=8443
#apprunner.keystore.path=/path/to/keystore.jks
#apprunner.keystore.password=password
#apprunner.keymanager.password=password

# To force redirects from HTTP to HTTPS, use the following (the port is the port external clients use):
#apprunner.redirecttohttps.port=443

# Optional validation regex for git Urls (with optional error message if it fails)
#apprunner.git.url.validation.regex=https://github.com/.*
#apprunner.git.url.validation.message=Invalid GIT URL

##################################
# Maven projects                 #
##################################

# To support maven, you need an M2_HOME environment variable set.
# M2_HOME=/opt/maven/apache-maven-3.9.9

# The default java is used, and can be changed here or using JAVA_HOME env var. Note that it must be a JDK.
# java.home=/Library/Java/JavaVirtualMachines/jdk1.8.0_05.jdk/Contents/Home

##################################
# Clojure and lein configuration #
##################################

# Don't care about clojure? Just comment the follow and it won't be supported.

# Specify the leiningen-[version]-standalone.jar file used to build lein projects
# Change here or set the LEIN_JAR environment variable
# lein.jar=C:\\Users\\Daniel\\.lein\\self-installs\\leiningen-2.5.3-standalone.jar

# Optional alternative Java for lein - JAVA_HOME is used if not specified, but note
# that this may already be set as an environment variable depending on how lein was
# set up on your system.
# Change here or use the LEIN_JAVA_CMD environment variable
# lein.java.cmd=C:\\Program Files\\Java\\jdk1.8.0_25\\bin\\java.exe

##################################
# NodeJS configuration           #
##################################

# By default, whichever node is on your path will be used, or if you don't have node
# then it won't be supported. You can override the versions used with the below:
# Change here or set the NODE_EXEC and NPM_EXEC environment variables
# node.exec=C:\\Program Files (x86)\\nodejs\\node.exe
# npm.exec=C:\\Program Files (x86)\\nodejs\\npm.cmd

##################################
# Python configuration           #
##################################

# By default, whichever virtualenv is on your path will be used.
# For the python command, non-Windows OSs will default to the python2 or python3 commands on the path.
# On Windows, the default is the python.exe on the path - the RunnerFactory will only start if the major version of
# the Python exe matches the version specified in the Factory.
# If no python installation is found, no PythonRunnerFactories will be created.

# Change python locations here, or set these environment variables in your shell:
# PYTHON_2_VIRTUALENV_EXEC, PYTHON_2_EXEC, PYTHON_3_VIRTUALENV_EXEC, PYTHON_3_EXEC
#
# python.2.virtualenv.exec=c:\\sandbox\\devtools\\python\\2.7.11\\Scripts\\virtualenv.exe
# python.2.exec=c:\\sandbox\\devtools\\python\\2.7.11\\python.exe
# python.3.virtualenv.exec=C:\\ProgramData\\Anaconda3\\Scripts\\virtualenv.exe
# python.3.exec=C:\\ProgramData\\Anaconda3\\python.exe

##################################
# Rust configuration             #
##################################

#By default, whichever cargo is on your path will be used.
#If you don't have cargo, rust won't be supported.
#You can set the path here or set the CARGO_EXEC environment variable
# cargo.exec=YOUR_%USERPROFILE%_DIR\\.cargo\\bin\\cargo.exe